<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="e1" class="extend.ServiceA"/>

    <bean id="e2" class="extend.ServiceB">
        <property name="serviceA" ref="e1"/>
        <property name="name" value="Java"/>
    </bean>

    <bean id="e3" class="extend.ServiceC">
        <property name="serviceA" ref="e1"/>
        <property name="name" value="Python"/>
    </bean>

    <bean id="baseService" abstract="true">
        <property name="name" value="Python_Java"/>
        <property name="serviceA" ref="e1"/>
    </bean>
<!--
bean元素的abstract属性为true的时候可以定义某个bean为一个抽象的bean，相当于定义了一个bean模板，spring容器并不会创建这个bean，从容器中查找abstract为true的bean的时候，会报错BeanIsAbstractException异常
bean元素的parent属性可以指定当前bean的父bean，子bean可以继承父bean中配置信息，也可以自定义配置信息，这样可以覆盖父bean中的配置
-->
    <bean id="e4" class="extend.ServiceB" parent="baseService"/>
    <bean id="e5" class="extend.ServiceC" parent="baseService"/>


</beans>